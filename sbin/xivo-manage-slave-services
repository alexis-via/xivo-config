#!/bin/sh
# Copyright 2019-2020 The Wazo Authors  (see the AUTHORS file)
# SPDX-License-Identifier: GPL-3.0+

PATH=/bin:/usr/bin:/sbin:/usr/sbin

usage() {
    cat <<-EOF
	usage: $(basename $0) action
	    action: start or stop to enable/disable slave services
	EOF
}

wait_until_agentd_ready() {
    WAIT_TIMEOUT=120
    WAIT_INTERVAL=1
    while ! ss --listening --tcp '( sport = :9493 )' | grep -q LISTEN; do
        sleep ${WAIT_INTERVAL}
        WAIT_TIMEOUT=$((WAIT_TIMEOUT - WAIT_INTERVAL))
        if [ "$WAIT_TIMEOUT" -eq 0 ]; then
            echo "wazo-agentd is not ready"
            return 1
        fi
    done
}

set_berofos_to_slave_state() {
    xivo-berofos -q --syslog slave
}

set_berofos_to_master_state() {
    xivo-berofos -q --syslog master
}

start_dhcp() {
    # apply replicated configuration
    xivo-create-config
    xivo-update-config

    # fetch updated phone MAC prefixes
    dhcpd-update -dr

    service isc-dhcp-server start
    update-rc.d isc-dhcp-server defaults
}

stop_dhcp() {
    update-rc.d isc-dhcp-server remove
    service isc-dhcp-server stop
}

enable_service() {
    start_dhcp
    set_berofos_to_slave_state
    wazo-confgen asterisk/pjsip.conf --invalidate
    wazo-service enable
    wazo-service start
    wait_until_agentd_ready
    wazo-agentd-cli -c 'relog all'
}

disable_service() {
    wazo-service stop xivo
    wazo-service disable
    set_berofos_to_master_state
    stop_dhcp
    wazo-service start
}

case $1 in
    start) enable_service;;
    stop)  disable_service;;
    *) usage;;
esac
